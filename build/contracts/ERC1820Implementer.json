{
  "contractName": "ERC1820Implementer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC1820Implementer} interface. Contracts may inherit from this and call {_registerInterfaceForAddress} to declare their willingness to be implementers. {IERC1820Registry-setInterfaceImplementer} should then be called for the registration to be complete.\",\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"details\":\"See {IERC1820Implementer-canImplementInterfaceForAddress}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/sandeep/NFT_Market/contracts/utils/introspection/ERC1820Implementer.sol\":\"ERC1820Implementer\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/sandeep/NFT_Market/contracts/utils/introspection/ERC1820Implementer.sol\":{\"keccak256\":\"0x3e1a3bb5490e316d5ece33fec5ee844dc6194472ad4491e82475b83ee336660d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b56f566ec3cd2ca4c7788045a444f686d1b319a581db8b77ee9202dcf117b0ad\",\"dweb:/ipfs/QmQqg96azFhL4tkJaadKy78KGJqGTUSCXs9ZWwvPpMT6ps\"]},\"/home/sandeep/NFT_Market/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xd658a25ce73a588bba55fa518ea79b3a581f14c411fb44a38e78f87e3a09ffcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://791297362508954c107c100110591cdd6b973a7257262aaf2630917552672a29\",\"dweb:/ipfs/QmWqXwQa6S9xQXx5oy5TB3N7TmyedVy3sJnfTLWP4jCsbp\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061022f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063249cb3fa14610030575b600080fd5b61004a60048036038101906100459190610120565b610060565b604051610057919061016f565b60405180910390f35b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100cc576000801b6100ee565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b600081359050610105816101cb565b92915050565b60008135905061011a816101e2565b92915050565b60008060408385031215610137576101366101c6565b5b60006101458582860161010b565b9250506020610156858286016100f6565b9150509250929050565b6101698161019c565b82525050565b60006020820190506101846000830184610160565b92915050565b6000610195826101a6565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101d48161018a565b81146101df57600080fd5b50565b6101eb8161019c565b81146101f657600080fd5b5056fea2646970667358221220ceccb55db5b586c0aad39590a65c1dd46ae68ac334cdd4b9f55dc9252bc1350164736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063249cb3fa14610030575b600080fd5b61004a60048036038101906100459190610120565b610060565b604051610057919061016f565b60405180910390f35b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100cc576000801b6100ee565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b600081359050610105816101cb565b92915050565b60008135905061011a816101e2565b92915050565b60008060408385031215610137576101366101c6565b5b60006101458582860161010b565b9250506020610156858286016100f6565b9150509250929050565b6101698161019c565b82525050565b60006020820190506101846000830184610160565b92915050565b6000610195826101a6565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101d48161018a565b81146101df57600080fd5b50565b6101eb8161019c565b81146101f657600080fd5b5056fea2646970667358221220ceccb55db5b586c0aad39590a65c1dd46ae68ac334cdd4b9f55dc9252bc1350164736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2026:171",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:171",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:171",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:171"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:171"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:171"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:171"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:171"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:171"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:171",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:171",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:171",
                "type": ""
              }
            ],
            "src": "7:139:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:171",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:171",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:171"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:171"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:171"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:171"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:171"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:171"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:171",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:171",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:171",
                "type": ""
              }
            ],
            "src": "152:139:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "380:391:171",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "426:83:171",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "428:77:171"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "428:79:171"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "428:79:171"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "401:7:171"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "410:9:171"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "397:3:171"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:23:171"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "422:2:171",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "393:3:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:32:171"
                  },
                  "nodeType": "YulIf",
                  "src": "390:2:171"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "519:117:171",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "534:15:171",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:1:171",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "538:6:171",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "563:63:171",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "598:9:171"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "609:6:171"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "594:3:171"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "594:22:171"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "618:7:171"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "573:20:171"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "573:53:171"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "563:6:171"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "646:118:171",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "661:16:171",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:171",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "665:6:171",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "691:63:171",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "726:9:171"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "737:6:171"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "722:3:171"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "722:22:171"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "746:7:171"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "701:20:171"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "701:53:171"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "691:6:171"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "342:9:171",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "353:7:171",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "365:6:171",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "373:6:171",
                "type": ""
              }
            ],
            "src": "297:474:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "842:53:171",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "859:3:171"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "882:5:171"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "864:17:171"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "864:24:171"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "852:6:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:37:171"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "852:37:171"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "830:5:171",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "837:3:171",
                "type": ""
              }
            ],
            "src": "777:118:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "999:124:171",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1009:26:171",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1021:9:171"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1032:2:171",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1017:3:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:18:171"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1009:4:171"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1089:6:171"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1102:9:171"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1113:1:171",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1098:3:171"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1098:17:171"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1045:43:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1045:71:171"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1045:71:171"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "971:9:171",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "983:6:171",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "994:4:171",
                "type": ""
              }
            ],
            "src": "901:222:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1169:35:171",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1179:19:171",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1195:2:171",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1189:5:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:9:171"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1179:6:171"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1162:6:171",
                "type": ""
              }
            ],
            "src": "1129:75:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1255:51:171",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1265:35:171",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1294:5:171"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1276:17:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1276:24:171"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1265:7:171"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1237:5:171",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1247:7:171",
                "type": ""
              }
            ],
            "src": "1210:96:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1357:32:171",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1367:16:171",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1378:5:171"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1367:7:171"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1339:5:171",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1349:7:171",
                "type": ""
              }
            ],
            "src": "1312:77:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1440:81:171",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1450:65:171",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1465:5:171"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1472:42:171",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1461:3:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1461:54:171"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1450:7:171"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1422:5:171",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1432:7:171",
                "type": ""
              }
            ],
            "src": "1395:126:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1616:28:171",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1633:1:171",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1636:1:171",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1626:6:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:12:171"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1626:12:171"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1527:117:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1739:28:171",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1756:1:171",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1759:1:171",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1749:6:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1749:12:171"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1749:12:171"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1650:117:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1816:79:171",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1873:16:171",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1882:1:171",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1885:1:171",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1875:6:171"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1875:12:171"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1875:12:171"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1839:5:171"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1864:5:171"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1846:17:171"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1846:24:171"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1836:2:171"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1836:35:171"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1829:6:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1829:43:171"
                  },
                  "nodeType": "YulIf",
                  "src": "1826:2:171"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1809:5:171",
                "type": ""
              }
            ],
            "src": "1773:122:171"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1944:79:171",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2001:16:171",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2010:1:171",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2013:1:171",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2003:6:171"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2003:12:171"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2003:12:171"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1967:5:171"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1992:5:171"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "1974:17:171"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1974:24:171"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1964:2:171"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1964:35:171"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1957:6:171"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1957:43:171"
                  },
                  "nodeType": "YulIf",
                  "src": "1954:2:171"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1937:5:171",
                "type": ""
              }
            ],
            "src": "1901:122:171"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 171,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "404:993:160:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "404:993:160:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;876:7;906:20;:35;927:13;906:35;;;;;;;;;;;:44;942:7;906:44;;;;;;;;;;;;;;;;;;;;;;;;;:84;;985:4;977:13;;906:84;;;510:33;906:84;899:91;;717:280;;;;:::o;7:139:171:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:2;;;428:79;;:::i;:::-;390:2;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;380:391;;;;;:::o;777:118::-;864:24;882:5;864:24;:::i;:::-;859:3;852:37;842:53;;:::o;901:222::-;994:4;1032:2;1021:9;1017:18;1009:26;;1045:71;1113:1;1102:9;1098:17;1089:6;1045:71;:::i;:::-;999:124;;;;:::o;1210:96::-;1247:7;1276:24;1294:5;1276:24;:::i;:::-;1265:35;;1255:51;;;:::o;1312:77::-;1349:7;1378:5;1367:16;;1357:32;;;:::o;1395:126::-;1432:7;1472:42;1465:5;1461:54;1450:65;;1440:81;;;:::o;1650:117::-;1759:1;1756;1749:12;1773:122;1846:24;1864:5;1846:24;:::i;:::-;1839:5;1836:35;1826:2;;1885:1;1882;1875:12;1826:2;1816:79;:::o;1901:122::-;1974:24;1992:5;1974:24;:::i;:::-;1967:5;1964:35;1954:2;;2013:1;2010;2003:12;1954:2;1944:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1820Implementer.sol\";\n\n/**\n * @dev Implementation of the {IERC1820Implementer} interface.\n *\n * Contracts may inherit from this and call {_registerInterfaceForAddress} to\n * declare their willingness to be implementers.\n * {IERC1820Registry-setInterfaceImplementer} should then be called for the\n * registration to be complete.\n */\ncontract ERC1820Implementer is IERC1820Implementer {\n    bytes32 private constant _ERC1820_ACCEPT_MAGIC = keccak256(\"ERC1820_ACCEPT_MAGIC\");\n\n    mapping(bytes32 => mapping(address => bool)) private _supportedInterfaces;\n\n    /**\n     * @dev See {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address account)\n        public\n        view\n        virtual\n        override\n        returns (bytes32)\n    {\n        return _supportedInterfaces[interfaceHash][account] ? _ERC1820_ACCEPT_MAGIC : bytes32(0x00);\n    }\n\n    /**\n     * @dev Declares the contract as willing to be an implementer of\n     * `interfaceHash` for `account`.\n     *\n     * See {IERC1820Registry-setInterfaceImplementer} and\n     * {IERC1820Registry-interfaceHash}.\n     */\n    function _registerInterfaceForAddress(bytes32 interfaceHash, address account) internal virtual {\n        _supportedInterfaces[interfaceHash][account] = true;\n    }\n}\n",
  "sourcePath": "/home/sandeep/NFT_Market/contracts/utils/introspection/ERC1820Implementer.sol",
  "ast": {
    "absolutePath": "/home/sandeep/NFT_Market/contracts/utils/introspection/ERC1820Implementer.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        19215
      ],
      "IERC1820Implementer": [
        19241
      ]
    },
    "id": 19216,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19158,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:160"
      },
      {
        "absolutePath": "/home/sandeep/NFT_Market/contracts/utils/introspection/IERC1820Implementer.sol",
        "file": "./IERC1820Implementer.sol",
        "id": 19159,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19216,
        "sourceUnit": 19242,
        "src": "58:35:160",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19161,
              "name": "IERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19241,
              "src": "435:19:160"
            },
            "id": 19162,
            "nodeType": "InheritanceSpecifier",
            "src": "435:19:160"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19160,
          "nodeType": "StructuredDocumentation",
          "src": "95:308:160",
          "text": " @dev Implementation of the {IERC1820Implementer} interface.\n Contracts may inherit from this and call {_registerInterfaceForAddress} to\n declare their willingness to be implementers.\n {IERC1820Registry-setInterfaceImplementer} should then be called for the\n registration to be complete."
        },
        "fullyImplemented": true,
        "id": 19215,
        "linearizedBaseContracts": [
          19215,
          19241
        ],
        "name": "ERC1820Implementer",
        "nameLocation": "413:18:160",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 19167,
            "mutability": "constant",
            "name": "_ERC1820_ACCEPT_MAGIC",
            "nameLocation": "486:21:160",
            "nodeType": "VariableDeclaration",
            "scope": 19215,
            "src": "461:82:160",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 19163,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "461:7:160",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243313832305f4143434550545f4d41474943",
                  "id": 19165,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "520:22:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  },
                  "value": "ERC1820_ACCEPT_MAGIC"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  }
                ],
                "id": 19164,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "510:9:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19166,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "510:33:160",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19173,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "603:20:160",
            "nodeType": "VariableDeclaration",
            "scope": 19215,
            "src": "550:73:160",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(address => bool))"
            },
            "typeName": {
              "id": 19172,
              "keyType": {
                "id": 19168,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "558:7:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "550:44:160",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(address => bool))"
              },
              "valueType": {
                "id": 19171,
                "keyType": {
                  "id": 19169,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "577:7:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "569:24:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 19170,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:4:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              19240
            ],
            "body": {
              "id": 19196,
              "nodeType": "Block",
              "src": "889:108:160",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 19184,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19173,
                          "src": "906:20:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 19186,
                        "indexExpression": {
                          "id": 19185,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19176,
                          "src": "927:13:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "906:35:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19188,
                      "indexExpression": {
                        "id": 19187,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19178,
                        "src": "942:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "906:44:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 19192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "985:4:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 19191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "977:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 19190,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:160",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 19193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:13:160",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 19194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "906:84:160",
                    "trueExpression": {
                      "id": 19189,
                      "name": "_ERC1820_ACCEPT_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19167,
                      "src": "953:21:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 19183,
                  "id": 19195,
                  "nodeType": "Return",
                  "src": "899:91:160"
                }
              ]
            },
            "documentation": {
              "id": 19174,
              "nodeType": "StructuredDocumentation",
              "src": "630:82:160",
              "text": " @dev See {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "249cb3fa",
            "id": 19197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nameLocation": "726:31:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19180,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "850:8:160"
            },
            "parameters": {
              "id": 19179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19176,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "766:13:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 19197,
                  "src": "758:21:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19175,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19178,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "789:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 19197,
                  "src": "781:15:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:40:160"
            },
            "returnParameters": {
              "id": 19183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19197,
                  "src": "876:7:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19181,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "875:9:160"
            },
            "scope": 19215,
            "src": "717:280:160",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19213,
              "nodeType": "Block",
              "src": "1327:68:160",
              "statements": [
                {
                  "expression": {
                    "id": 19211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 19205,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19173,
                          "src": "1337:20:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 19208,
                        "indexExpression": {
                          "id": 19206,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19200,
                          "src": "1358:13:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1337:35:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19209,
                      "indexExpression": {
                        "id": 19207,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19202,
                        "src": "1373:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1337:44:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 19210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:4:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1337:51:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19212,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:51:160"
                }
              ]
            },
            "documentation": {
              "id": 19198,
              "nodeType": "StructuredDocumentation",
              "src": "1003:224:160",
              "text": " @dev Declares the contract as willing to be an implementer of\n `interfaceHash` for `account`.\n See {IERC1820Registry-setInterfaceImplementer} and\n {IERC1820Registry-interfaceHash}."
            },
            "id": 19214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterfaceForAddress",
            "nameLocation": "1241:28:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19200,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "1278:13:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 19214,
                  "src": "1270:21:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19199,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19202,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1301:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 19214,
                  "src": "1293:15:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:40:160"
            },
            "returnParameters": {
              "id": 19204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:160"
            },
            "scope": 19215,
            "src": "1232:163:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 19216,
        "src": "404:993:160",
        "usedErrors": []
      }
    ],
    "src": "33:1365:160"
  },
  "legacyAST": {
    "absolutePath": "/home/sandeep/NFT_Market/contracts/utils/introspection/ERC1820Implementer.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        19215
      ],
      "IERC1820Implementer": [
        19241
      ]
    },
    "id": 19216,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19158,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:160"
      },
      {
        "absolutePath": "/home/sandeep/NFT_Market/contracts/utils/introspection/IERC1820Implementer.sol",
        "file": "./IERC1820Implementer.sol",
        "id": 19159,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19216,
        "sourceUnit": 19242,
        "src": "58:35:160",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19161,
              "name": "IERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19241,
              "src": "435:19:160"
            },
            "id": 19162,
            "nodeType": "InheritanceSpecifier",
            "src": "435:19:160"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19160,
          "nodeType": "StructuredDocumentation",
          "src": "95:308:160",
          "text": " @dev Implementation of the {IERC1820Implementer} interface.\n Contracts may inherit from this and call {_registerInterfaceForAddress} to\n declare their willingness to be implementers.\n {IERC1820Registry-setInterfaceImplementer} should then be called for the\n registration to be complete."
        },
        "fullyImplemented": true,
        "id": 19215,
        "linearizedBaseContracts": [
          19215,
          19241
        ],
        "name": "ERC1820Implementer",
        "nameLocation": "413:18:160",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 19167,
            "mutability": "constant",
            "name": "_ERC1820_ACCEPT_MAGIC",
            "nameLocation": "486:21:160",
            "nodeType": "VariableDeclaration",
            "scope": 19215,
            "src": "461:82:160",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 19163,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "461:7:160",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243313832305f4143434550545f4d41474943",
                  "id": 19165,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "520:22:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  },
                  "value": "ERC1820_ACCEPT_MAGIC"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                    "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                  }
                ],
                "id": 19164,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "510:9:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19166,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "510:33:160",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19173,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "603:20:160",
            "nodeType": "VariableDeclaration",
            "scope": 19215,
            "src": "550:73:160",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(address => bool))"
            },
            "typeName": {
              "id": 19172,
              "keyType": {
                "id": 19168,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "558:7:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "550:44:160",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(address => bool))"
              },
              "valueType": {
                "id": 19171,
                "keyType": {
                  "id": 19169,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "577:7:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "569:24:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 19170,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:4:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              19240
            ],
            "body": {
              "id": 19196,
              "nodeType": "Block",
              "src": "889:108:160",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 19184,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19173,
                          "src": "906:20:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 19186,
                        "indexExpression": {
                          "id": 19185,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19176,
                          "src": "927:13:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "906:35:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19188,
                      "indexExpression": {
                        "id": 19187,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19178,
                        "src": "942:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "906:44:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 19192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "985:4:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 19191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "977:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 19190,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:7:160",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 19193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:13:160",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 19194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "906:84:160",
                    "trueExpression": {
                      "id": 19189,
                      "name": "_ERC1820_ACCEPT_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19167,
                      "src": "953:21:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 19183,
                  "id": 19195,
                  "nodeType": "Return",
                  "src": "899:91:160"
                }
              ]
            },
            "documentation": {
              "id": 19174,
              "nodeType": "StructuredDocumentation",
              "src": "630:82:160",
              "text": " @dev See {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "249cb3fa",
            "id": 19197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nameLocation": "726:31:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19180,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "850:8:160"
            },
            "parameters": {
              "id": 19179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19176,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "766:13:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 19197,
                  "src": "758:21:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19175,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19178,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "789:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 19197,
                  "src": "781:15:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "757:40:160"
            },
            "returnParameters": {
              "id": 19183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19197,
                  "src": "876:7:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19181,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "875:9:160"
            },
            "scope": 19215,
            "src": "717:280:160",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19213,
              "nodeType": "Block",
              "src": "1327:68:160",
              "statements": [
                {
                  "expression": {
                    "id": 19211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 19205,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19173,
                          "src": "1337:20:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 19208,
                        "indexExpression": {
                          "id": 19206,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19200,
                          "src": "1358:13:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1337:35:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19209,
                      "indexExpression": {
                        "id": 19207,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19202,
                        "src": "1373:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1337:44:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 19210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:4:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1337:51:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19212,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:51:160"
                }
              ]
            },
            "documentation": {
              "id": 19198,
              "nodeType": "StructuredDocumentation",
              "src": "1003:224:160",
              "text": " @dev Declares the contract as willing to be an implementer of\n `interfaceHash` for `account`.\n See {IERC1820Registry-setInterfaceImplementer} and\n {IERC1820Registry-interfaceHash}."
            },
            "id": 19214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterfaceForAddress",
            "nameLocation": "1241:28:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19200,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "1278:13:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 19214,
                  "src": "1270:21:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19199,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19202,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1301:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 19214,
                  "src": "1293:15:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:40:160"
            },
            "returnParameters": {
              "id": 19204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:160"
            },
            "scope": 19215,
            "src": "1232:163:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 19216,
        "src": "404:993:160",
        "usedErrors": []
      }
    ],
    "src": "33:1365:160"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-13T14:33:11.234Z",
  "devdoc": {
    "details": "Implementation of the {IERC1820Implementer} interface. Contracts may inherit from this and call {_registerInterfaceForAddress} to declare their willingness to be implementers. {IERC1820Registry-setInterfaceImplementer} should then be called for the registration to be complete.",
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "details": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}